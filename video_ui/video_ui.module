<?php

/**
 * @file
 * Administrative interface to the Video module.
 * @author : Heshan (heshan@heidisoft.com)
 */

/**
 * Saves a new preset.
 */
function video_preset_save($preset) {

  // If they provide the pid, then this needs to be an update.
  dsm($preset);
  $name = $preset['name'];
  $description = $preset['description'];
  $settings = $preset['settings'];
  $serialized_settings = serialize($settings);

  $max_pid_count = db_query("Select max(pid) as pid From video_preset")->fetchObject();
  $count = $max_pid_count->pid + 1;

  if (isset($preset['pid']) && $preset['pid']) {
    $pid = $preset['pid'];
  }
  else {
    $pid = $count;
    $preset['pid'] = $pid;
  }
  
  // // Save or update a preset.
  \Drupal::database()->merge('video_preset')
    ->key(array('pid' => $pid))
    ->fields(array(
      'pid' => $pid,
      'name' => $name,
      'description' => $description,
      'settings' => $serialized_settings,
    ))
    ->execute();

  return $preset;
}

/**
 * Verify the syntax of the given prefix name.
 *
 * Borrowed from the user.module.   :)
 */
function video_validate_preset_name($name, $old_name = '') {
  if (empty($name)) {
    return t('You must enter a preset.');
  }
  if (strnatcasecmp($name, $old_name) != 0 && video_preset_name_exists($name)) {
    return t('The preset name %name is already taken.', array('%name' => $name));
  }
  if (is_numeric($name[0])) {
    return t('The preset name cannot begin with a number.');
  }
  if (preg_match('/[^a-z0-9_ \-.\']/i', $name)) {
    return t('The preset name contains an illegal character.');
  }
  if (drupal_strlen($name) > VIDEO_PRESET_MAX_LENGTH) {
    return t('The preset name %name is too long: it must be %max characters or less.', array('%name' => $name, '%max' => VIDEO_PRESET_MAX_LENGTH));
  }

  return NULL;
}

/**
 * Checks to see if another preset is already taken.
 */
function video_preset_name_exists($preset_name) {
  // Get the default presets.
  $default_presets = Preset::getDefaultPresets();

  // See if there is a default preset name.
  if ($default_presets && isset($default_presets[$preset_name])) {
    return TRUE;
  }
  else {
    return (bool) db_select('video_preset', 'p')
    ->fields('p')
    ->condition('p.name', $preset_name)
    ->range(0, 1)
    ->execute()
    ->fetchField();
  }
}

/**
 * Flatten the settings array.
 */
function video_preset_array_flatten($array, $return = array()) {
  foreach ($array as $key => $value) {
    if (is_array($value)) {
      $return = video_preset_array_flatten($value, $return);
    }
    else {
      $return[$key] = $value;
    }
  }
  return $return;
}